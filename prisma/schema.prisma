// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  String @id @default(uuid()) @map("id") @db.Uuid
  email String @unique 
  key String?
  firstName String @map("first_name") @db.VarChar(100) 
  lastName String @map("last_name") @db.VarChar(100)
  password String @db.VarChar(255)
  emailConfirmed Boolean @map("email_confirmed") @default(false) @db.Boolean()
  imgUrl String? @map("img_url")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @map("updated_at") @updatedAt
  role Role @default(USER)
  profile UserProfile?
  products Product[]

  @@map("users")
}

enum Role {
  USER
  ADMIN
}

model UserProfile {
  id  String @id @default(uuid()) @map("id") @db.Uuid
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String @unique @map("user_id") @default(uuid()) @db.Uuid
  firstName String @map("first_name") @db.VarChar(100) 
  lastName String @map("last_name") @db.VarChar(100)
  imgUrl String? @map("img_url")
  @@map("profiles")
}

model AccessKey {
  modelId String @id @default(uuid())  
  id  String @unique 
  name String
  password String
  port Int
  method String
  accessUrl String @unique
}

model Payment {
  paymentId String @id @unique
  userId String 
  status String 
  amount String  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id String @id @unique @default(uuid()) @map("product_id") @db.Uuid
  name String @map("product_name")
  region String @map("product_region")
  userId String @db.Uuid

  accessUrl String @unique

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}